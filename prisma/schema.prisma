generator client {
  provider = "prisma-client-js"
  output   = "../src/server/client"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Articles {
  id     Int     @id @default(autoincrement())
  title  String  @db.VarChar(255)
  img    String  @db.VarChar(255)
  date   String  @db.VarChar(255)
  text   String? @db.Text
  userId Int     @map("user_id")
}

model Account {
  id                 Int      @id @default(autoincrement())
  userId             Int
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id            Int       @id @default(autoincrement())
  name          String?   @unique
  email         String?   @unique
  password      String    @db.VarChar(255)
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt      @map("created_at")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}